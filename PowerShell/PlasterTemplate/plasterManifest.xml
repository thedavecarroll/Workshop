<?xml version="1.0" encoding="utf-8"?>
<plasterManifest schemaVersion="0.4" xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1">
    <metadata>
        <id>adf7cc44-d5ad-4a77-a699-97176847666e</id>
        <name>PlasterTemplate</name>
        <title>New Module Template - Plaster</title>
        <description>Scaffolds the files required for a PowerShell script module.</description>
        <author>Dave Carroll</author>
        <version>1.0.0</version>
        <tags>Module, ModuleManifest, Build</tags>
    </metadata>
    <parameters>
        <parameter name='ModuleName'
                type='text'
                prompt='Enter the name of the module'/>

        <parameter name='ModuleDesc'
                type='text'
                prompt='Enter a description of the module (required for publishing to the PowerShell Gallery)'/>

        <parameter name='Version'
                type='text'
                prompt='Enter the version number of the module'
                default='0.1.0'/>

        <parameter name='PowerShellVersion'
                type='text'
                prompt='Minimum PowerShell Version'
                default='None'/>

        <parameter name='CompatiblePSEditions'
                type='choice'
                prompt='Supported PowerShell Edition'
                default='0'
                store='text' >
                <choice label='&amp;Desktop'
                        help='Windows PowerShell'
                        value="'Desktop'"/>
                <choice label='&amp;Core'
                        help='PowerShell Core'
                        value="'Core'"/>
                <choice label='&amp;Both'
                        help='Supports Both'
                        value="'Desktop','Core'"/>
        </parameter>

        <parameter name='FullName'
                type='user-fullname'
                prompt='Enter your full name'
                store='text' />

        <parameter name='Company'
                type='text'
                default='Unknown'
                prompt='Enter the name of your company' />

        <parameter name='License'
                type='choice'
                prompt='Select a license (see http://choosealicense.com for help choosing):'
                default='0'
                store='text'>
                <choice label='&amp;None'
                        help="No license."
                        value="None"/>
                <choice label='&amp;Apache'
                        help="Adds an Apache license file."
                        value="Apache"/>
                <choice label='&amp;MIT'
                        help="Adds an MIT license file."
                        value="MIT"/>
        </parameter>

        <parameter name='Options'
                type='multichoice'
                prompt='Select one or more of the following tooling options:'
                default='1,2,3,4'
                store='text' >
                <choice label='&amp;None'
                        help="No tooling options specified."
                        value="None"/>
                <choice label='Add &amp;Git .gitignore file'
                        help="Adds a .gitignore file."
                        value="Git"/>
                <choice label='Add p&amp;sake build script'
                        help="Adds psake build script that generates the module directory for publishing to the PowerShell Gallery."
                        value="psake"/>
                <choice label='Add &amp;Pester test support'
                        help="Adds test directory and Pester test for the module manifest file."
                        value="Pester"/>
                <choice label='Add PSScript&amp;Analyzer support'
                        help="Adds script analysis support using PSScriptAnalyzer."
                        value="PSScriptAnalyzer"/>
                <choice label='Add plat&amp;yPS help generation support'
                        help="Adds help build support using platyPS."
                        value="platyPS"/>
        </parameter>

        <parameter name='Editor'
                type='choice'
                prompt='Select one of the supported script editors for better editor integration (or None):'
                default='0'
                store='text' >
                <choice label='&amp;None'
                        help="No editor specified."
                        value="None"/>
                <choice label='Visual Studio &amp;Code'
                        help="Your editor is Visual Studio Code."
                        value="VSCode"/>
        </parameter>

    </parameters>

    <content>
        <message>&#10;&#10;Scaffolding your PowerShell Module...&#10;&#10;&#10;</message>

        <file source='ReleaseNotes.md'
              destination=''/>
        <file source='CHANGELOG.md'
              destination=''/>
        <file source='README.md'
              destination=''/>

        <file condition='$PLASTER_PARAM_Options -contains "Git"'
              source='_gitignore'
              destination='.gitignore' />

        <file condition='$PLASTER_PARAM_Options -contains "psake"'
              source='build*.ps1'
              destination='' />
        <file condition='$PLASTER_PARAM_Options -contains "psake"'
              source='Requirements.psd1'
              destination='' />

        <file condition='$PLASTER_PARAM_Options -contains "pester"'
              source='ScriptAnalyzerSettings.psd1'
              destination='' />

        <file source='source\Module.psm1'
              destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psm1'/>

        <!-- Don't use Gherkin Specifications -->
        <!-- <file source='' destination='spec'/> -->
        <file source='' destination='${PLASTER_PARAM_ModuleName}\Public'/>
        <file source='' destination='${PLASTER_PARAM_ModuleName}\Private'/>
        <file source='' destination='${PLASTER_PARAM_ModuleName}\Classes'/>
        <file source='' destination='${PLASTER_PARAM_ModuleName}\TypeData'/>
        <file source='' destination='${PLASTER_PARAM_ModuleName}\Scripts'/>
        <file source='' destination='${PLASTER_PARAM_ModuleName}\en-US'/>

        <templateFile condition="$PLASTER_PARAM_Options -contains 'platyPS'"
                      source='docs\en-US\about_Module.help.md'
                      destination='${PLASTER_PARAM_ModuleName}\en-US\about_${PLASTER_PARAM_ModuleName}.help.md'/>
        <templateFile condition="$PLASTER_PARAM_Options -notcontains 'platyPS'"
                      source='docs\en-US\about_Module.help.txt'
                      destination='${PLASTER_PARAM_ModuleName}\en-US\about_${PLASTER_PARAM_ModuleName}.help.txt'/>
        <templateFile condition="$PLASTER_PARAM_Options -contains 'Pester'"
                      source='Tests\Module.T.ps1'
                      destination='Tests\${PLASTER_PARAM_ModuleName}.Tests.ps1' />
        <templateFile condition="$PLASTER_PARAM_Options -contains 'Pester'"
                      source='Tests\Shared.ps1'
                      destination='Tests\Shared.ps1' />
        <templateFile condition="$PLASTER_PARAM_License -eq 'Apache'"
                      source='license\Apache.txt'
                      destination='LICENSE'
                      encoding="UTF8-NoBOM"/>
        <templateFile condition="$PLASTER_PARAM_License -eq 'MIT'"
                      source='license\MIT.txt'
                      destination='LICENSE' />

        <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -notcontains 'psake') -and ($PLASTER_PARAM_Options -contains 'Pester')"
              source='editor\VSCode\tasks_pester.json'
              destination='.vscode\tasks.json' />

        <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -contains 'psake') -and ($PLASTER_PARAM_Options -notcontains 'Pester')"
              source='editor\VSCode\tasks_psake.json'
              destination='.vscode\tasks.json' />

        <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -contains 'psake') -and ($PLASTER_PARAM_Options -contains 'Pester')"
              source='editor\VSCode\tasks_psake_pester.json'
              destination='.vscode\tasks.json' />

        <file condition="($PLASTER_PARAM_Editor -eq 'VSCode') -and ($PLASTER_PARAM_Options -contains 'PSScriptAnalyzer')"
              source='editor\VSCode\settings.json'
              destination='.vscode\settings.json' />

        <requireModule name="Pester" condition='$PLASTER_PARAM_Options -contains "Pester"' minimumVersion="3.4.0"
            message="Without Pester, you will not be able to run the provided Pester test to validate your module manifest file.`nWithout version 3.4.0, VS Code will not display Pester warnings and errors in the Problems panel."/>

        <requireModule name="psake" condition='$PLASTER_PARAM_Options -contains "psake"'
            message="Without psake, you will not be able to run the provided build script to build and/or publish your module."/>

        <requireModule name="PSScriptAnalyzer" condition='$PLASTER_PARAM_Options -contains "PSScriptAnalyzer"'
            message="Without PSScriptAnalyzer, you will not be able to perform script analysis, or use the provided options to control script analysis."/>

        <requireModule name="platyPS" condition='$PLASTER_PARAM_Options -contains "platyPS"' minimumVersion="0.7.2"
            message="Without platyPS, you will not be able to generate PowerShell external help for your module using markdown."/>

        <newModuleManifest
                destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psd1'
                moduleVersion='$PLASTER_PARAM_Version'
                rootModule='${PLASTER_PARAM_ModuleName}.psm1'
                author='$PLASTER_PARAM_FullName'
                description='$PLASTER_PARAM_ModuleDesc'
                encoding='UTF8-NoBOM'/>

        <message>&#10;Setting Company              ['$PLASTER_PARAM_Company']&#10;&#10;</message>
        <message>&#10;Setting PowerShellVersion    ['$PLASTER_PARAM_PowerShellVersion']&#10;&#10;</message>
        <message>&#10;Setting CompatiblePSEditions ['$PLASTER_PARAM_CompatiblePSEditions']&#10;&#10;</message>

        <modify path="${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psd1">
                <replace>
                        <original>CompanyName = 'Unknown'</original>
                        <substitute expand='true'>CompanyName = '$PLASTER_PARAM_Company'</substitute>
                </replace>
                <replace condition="$PLASTER_PARAM_PowerShellVersion -ne 'None'">
                        <original># PowerShellVersion = ''</original>
                        <substitute expand='true'>PowerShellVersion = '$PLASTER_PARAM_PowerShellVersion'</substitute>
                </replace>
                <replace>
                        <original># CompatiblePSEditions = @(\(\))</original>
                        <substitute expand='true'>CompatiblePSEditions = @($PLASTER_PARAM_CompatiblePSEditions)</substitute>
                </replace>
                <replace>
                        <original>FunctionsToExport = '*'</original>
                        <substitute># FunctionsToExport = '*'</substitute>
                </replace>
                <replace>
                        <original>CmdletsToExport = '*'</original>
                        <substitute># CmdletsToExport = '*'</substitute>
                </replace>
                <replace>
                        <original>VariablesToExport = '*'</original>
                        <substitute># VariablesToExport = '*'</substitute>
                </replace>
                <replace>
                        <original>AliasesToExport = '*'</original>
                        <substitute># AliasesToExport = '*'</substitute>
                </replace>
        </modify>

        <message>

Your new PowerShell module project '$PLASTER_PARAM_ModuleName' has been created.

        </message>

        <message condition="$PLASTER_PARAM_Options -contains 'Pester'">
A Pester test has been created to validate the module's manifest file.  Add additional tests to the test directory.
You can run the Pester tests in your project by executing the 'test' task.  Press Ctrl+P, then type 'task test'.

        </message>

        <message condition="$PLASTER_PARAM_Options -contains 'psake'">
You can build your project by executing the 'build' task.  Press Ctrl+P, then type 'task build'.
You can publish your project to the PSGallery by pressing Ctrl+P, then type 'task publish'.

        </message>

        <message condition="($PLASTER_PARAM_Options -contains 'psake') -and ($PLASTER_PARAM_Options -contains 'platyPS')">
You can generate help and additional documentation using platyPS by running the 'build help' task.  Press Ctrl+P,
then type 'task build help'.  Add additional documentation written in platyPS markdown to the docs directory. You can
update the help by running the 'build help' task again.

        </message>
    </content>
</plasterManifest>
